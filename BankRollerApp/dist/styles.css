body::after {
  position: absolute;
  width: 0;
  height: 0;
  overflow: hidden;
  z-index: -1;
}
/* Reset.less
 * Props to Eric Meyer (meyerweb.com) for his CSS reset file. We're using an adapted version here that cuts out some of the reset HTML elements we will never need here (i.e., dfn, samp, etc).
 * ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
html,
body {
  margin: 0;
  padding: 0;
}
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
cite,
code,
del,
dfn,
em,
img,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
dd,
dl,
dt,
li,
ol,
ul,
fieldset,
form,
label,
legend,
button,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td {
  margin: 0;
  padding: 0;
  border: 0;
  font-weight: normal;
  font-style: normal;
  font-size: 100%;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
ol,
ul {
  list-style: none;
}
q:before,
q:after,
blockquote:before,
blockquote:after {
  content: "";
}
* {
  border-radius: 0;
}
html {
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}
a:focus {
  outline: thin dotted;
}
a:hover,
a:active {
  outline: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section {
  display: block;
}
audio,
canvas,
video {
  display: inline-block;
  display: inline;
  zoom: 1;
}
audio:not([controls]) {
  display: none;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
  -ms-interpolation-mode: bicubic;
}
button,
input,
select,
textarea {
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
}
button,
input {
  line-height: normal;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  cursor: pointer;
  -webkit-appearance: button;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
textarea {
  overflow: auto;
  vertical-align: top;
}
* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}
html,
body {
  margin: 0;
  padding: 0;
  -webkit-font-smoothing: antialiased;
}
*::-webkit-scrollbar {
  display: none;
}
html {
  overflow: -moz-scrollbars-none;
}
* {
  /* prevent callout when holding tap on links (the native dialog that comes up) */
  -webkit-touch-callout: none;
  /* prevent webkit from resizing text to fit */
  -webkit-text-size-adjust: none;
  /* make transparent link selection, adjust last value opacity 0 to 1.0 */
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  /* prevent copy paste, to allow, change 'none' to 'text' */
}
input[type="checkbox"] {
  -webkit-appearance: none;
}
input::-webkit-input-placeholder {
  opacity: 0;
}
*:active,
*:focus {
  outline: none;
}
.no-select {
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
  -webkit-focus-ring-color: rgba(255, 255, 255, 0);
  outline: none;
  -moz-user-select: none;
  -o-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
      user-select: none;
  resize: none;
  -webkit-text-size-adjust: none;
}
.text-select,
.text-select * {
  pointer-events: all;
  cursor: text;
  -moz-user-select: text;
  -o-user-select: text;
  -webkit-user-select: text;
  -ms-user-select: text;
      user-select: text;
  resize: none;
}
.text-select::-moz-selection,
.text-select *::-moz-selection,
.text-select *::-moz-selection,
.text-select * *::-moz-selection {
  background-color: rgba(0, 0, 0, 0.5);
  color: #fff;
}
.text-select::selection,
.text-select *::selection,
.text-select *::selection,
.text-select * *::selection {
  background-color: rgba(0, 0, 0, 0.5);
  color: #fff;
}
img {
  border: 0;
  vertical-align: top;
}
a {
  text-decoration: none;
}
a:focus,
a:active {
  outline: none;
}
html {
  color: #fff;
  font-size: 16px;
}
body,
body * {
  font-family: Roboto, Helvetica Neue, -apple-system, BlinkMacSystemFont, sans-serif, sans-serif;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}
body {
  background: #202020;
  color: #999;
}
a {
  color: #fff;
}
a:hover {
  color: #ccc;
}
#logo {
  width: 280px;
  font-family: Helvetica, "BasisGrotesquePro-Regular";
}
#logo img {
  margin: 10px 10px -10px 10px;
}
#logo a {
  font-weight: normal;
  line-height: 64px;
  font-size: 32px;
  color: #fff;
  margin-bottom: 7px;
  text-decoration: none;
}
#logo a span {
  color: #ed9726;
}
#logo p {
  color: #fff;
  letter-spacing: 1px;
  text-transform: uppercase;
  font-size: 10px;
  margin: -5px 0 0 76px;
}
#content {
  text-align: center;
  padding: 40px  0px  40px  0px;
}
#content.loading * {
  display: none;
}
#content.loading:after {
  content: 'Loading...';
  margin: 50px;
  display: block;
  letter-spacing: 1px;
  text-transform: uppercase;
}
#add_game_form {
  padding: 20px;
}
input {
  background: transparent;
  border: 0;
  border-bottom: 2px solid #777;
  padding: 10px 20px 8px 10px;
  color: #fff;
  font-size: 16px;
  letter-spacing: 1px;
}
input:focus {
  border-bottom-color: #aaa;
  outline: none;
}
input::-webkit-input-placeholder {
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 1px;
}
input:focus:empty::-webkit-input-placeholder {
  color: rgba(0, 0, 0, 0);
}
#add_game_contract_id {
  background: #ed9726;
  border: 0;
  color: #202020;
  padding: 10px 20px;
  letter-spacing: 1px;
  text-transform: uppercase;
  font-weight: 600;
  border-radius: 2px;
  margin: 10px auto;
}
table {
  width: 100%;
  margin: 0 0 20px 0;
}
table th,
table td {
  padding: 7px 5px;
  font-size: 13px;
}
table th {
  background: rgba(100, 100, 100, 0.1);
  font-weight: normal;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 10px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
